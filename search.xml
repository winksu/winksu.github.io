<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>test1</title>
      <link href="/2023/08/21/test1/"/>
      <url>/2023/08/21/test1/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>test</title>
      <link href="/2023/08/21/test/"/>
      <url>/2023/08/21/test/</url>
      
        <content type="html"><![CDATA[<h1 id="你好"><a href="#你好" class="headerlink" title="你好"></a>你好</h1><img src="/2023/08/21/test/1.jpg" class="" title="this is test">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/08/21/hexo-tong-guo-hexo-da-jian-ge-ren-bo-ke/"/>
      <url>/2023/08/21/hexo-tong-guo-hexo-da-jian-ge-ren-bo-ke/</url>
      
        <content type="html"><![CDATA[<p>@<a href="%E8%BF%99%E9%87%8C%E5%86%99%E8%87%AA%E5%AE%9A%E4%B9%89%E7%9B%AE%E5%BD%95%E6%A0%87%E9%A2%98">TOC</a></p><h1 id="通过Hexo搭建个人博客"><a href="#通过Hexo搭建个人博客" class="headerlink" title="通过Hexo搭建个人博客"></a>通过Hexo搭建个人博客</h1><p>Hexo是一个基于Node.js的静态博客生成框架，它允许你用Markdown语法编写博客文章，并将其转换为HTML页面。通过Hexo，你可以方便地创建和管理个人博客，然后将生成的静态页面部署到网络服务器上。这使得博客的管理和发布变得更加简单和高效。<br>首先电脑要安装配置有git环境和node环境，还要有自己的GitHub账号。以下是Hexo与Node.js的版本对应关系：<br><img src="https://img-blog.csdnimg.cn/235321a3a3fa46c3bd0fe3c3e28f34f0.png#pic_center" alt="Hexo与Node.js的版本对应"><br>接下来我们只需十步完成搭建！</p><h2 id="第一步，打开cmd命令行全局安装Hexo-cli脚手架"><a href="#第一步，打开cmd命令行全局安装Hexo-cli脚手架" class="headerlink" title="第一步，打开cmd命令行全局安装Hexo-cli脚手架"></a>第一步，打开cmd命令行全局安装Hexo-cli脚手架</h2><p>使用 win+R 输入cmd 进入命令行界面，输入以下命令：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">-g</span> hexo-cli<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://img-blog.csdnimg.cn/bea36cd28ba9497c93ede01c999d7b9f.png#pic_center" alt="运行结果"></p><h2 id="第二步，在你喜欢的磁盘目录下创建一个空文件夹"><a href="#第二步，在你喜欢的磁盘目录下创建一个空文件夹" class="headerlink" title="第二步，在你喜欢的磁盘目录下创建一个空文件夹"></a>第二步，在你喜欢的磁盘目录下创建一个空文件夹</h2><p>我这里创建了一个winksu的空文件夹，进行第三步之前，一定要确保它是空的。<br><img src="https://img-blog.csdnimg.cn/72219f8f9e3749be8c0eaf4d1391a897.png#pic_center" alt="仅供参考"></p><h2 id="第三步，在上一步的文件夹下右键打开gitbush命令行界面，进行初始化"><a href="#第三步，在上一步的文件夹下右键打开gitbush命令行界面，进行初始化" class="headerlink" title="第三步，在上一步的文件夹下右键打开gitbush命令行界面，进行初始化"></a>第三步，在上一步的文件夹下右键打开gitbush命令行界面，进行初始化</h2><p>如果右键没有装载gitbush，可以在当前目录通过 shift+右键，打开终端，同样如下进行初始化：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo init<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://img-blog.csdnimg.cn/d5204bfbc6df4ff2b1443d40969ddd01.png#pic_center" alt="初始化成功"></p><h2 id="第四步，启动查看Hexo网站是否初始化成功"><a href="#第四步，启动查看Hexo网站是否初始化成功" class="headerlink" title="第四步，启动查看Hexo网站是否初始化成功"></a>第四步，启动查看Hexo网站是否初始化成功</h2><p>输入以下命令启动：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo s<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://img-blog.csdnimg.cn/2cce53abebcd4dc5a31dc9cb3e8a341d.png#pic_center" alt="运行结果"><br>在浏览器上输入给定的端口号<a href="http://localhost:4000/%E8%BF%9B%E8%A1%8C%E8%AE%BF%E9%97%AE%E8%83%BD%E7%9C%8B%E5%88%B0%E5%A6%82%E4%B8%8B%E7%95%8C%E9%9D%A2%EF%BC%8C%E5%B0%B1%E6%98%AF%E5%88%9D%E5%A7%8B%E5%8C%96%E6%88%90%E5%8A%9F%E3%80%82">http://localhost:4000/进行访问能看到如下界面，就是初始化成功。</a><br><img src="https://img-blog.csdnimg.cn/28e6880cf8d24db99cc09d4783ae3416.png#pic_center" alt="初始化成功"></p><h2 id="第五步，进入自己的github，创建一个新的仓库，仓库名要与用户名同名，后缀-github-io"><a href="#第五步，进入自己的github，创建一个新的仓库，仓库名要与用户名同名，后缀-github-io" class="headerlink" title="第五步，进入自己的github，创建一个新的仓库，仓库名要与用户名同名，后缀~github.io"></a>第五步，进入自己的github，创建一个新的仓库，仓库名要与用户名同名，后缀~github.io</h2><p><img src="https://img-blog.csdnimg.cn/492315a5ed4743209bf4d77d40eea0d1.png#pic_center" alt="new一个仓库"><br><img src="https://img-blog.csdnimg.cn/c9801bd894194b129c2c86f93a1bec60.png#pic_center" alt="创建仓库"></p><h2 id="第六步，打开cmd，验证自己的git账户，目的为了后续生成ssh密钥"><a href="#第六步，打开cmd，验证自己的git账户，目的为了后续生成ssh密钥" class="headerlink" title="第六步，打开cmd，验证自己的git账户，目的为了后续生成ssh密钥"></a>第六步，打开cmd，验证自己的git账户，目的为了后续生成ssh密钥</h2><p>依次输入命令如下：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> config <span class="token parameter variable">--global</span> user.name <span class="token string">"git用户名"</span><span class="token function">git</span> config <span class="token parameter variable">--global</span> user.email <span class="token string">"git邮箱"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://img-blog.csdnimg.cn/06c756ccb5554b9986085ef51875a0a5.png#pic_center" alt="验证账号"></p><h2 id="第七步，打开gitbush窗口，输入以下命令，获取ssh"><a href="#第七步，打开gitbush窗口，输入以下命令，获取ssh" class="headerlink" title="第七步，打开gitbush窗口，输入以下命令，获取ssh"></a>第七步，打开gitbush窗口，输入以下命令，获取ssh</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">ssh-keygen <span class="token parameter variable">-t</span> rsa <span class="token parameter variable">-C</span> git邮箱<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://img-blog.csdnimg.cn/46da00c058444a93abe3dfbece7df639.png#pic_center" alt="获取ssh"></p><h2 id="第八步，打开c盘找到如图所示目录下的-ssh的文件，打开-id-rsa-pub-复制里面的全部内容"><a href="#第八步，打开c盘找到如图所示目录下的-ssh的文件，打开-id-rsa-pub-复制里面的全部内容" class="headerlink" title="第八步，打开c盘找到如图所示目录下的 .ssh的文件，打开 id_rsa.pub,复制里面的全部内容"></a>第八步，打开c盘找到如图所示目录下的 .ssh的文件，打开 id_rsa.pub,复制里面的全部内容</h2><p><img src="https://img-blog.csdnimg.cn/53c08783d7584d25aba58c3eca2eb20c.png#pic_center" alt="找到ssh"><br>打开 .ssh文件，找到id_rsa.pub，复制里面的全部内容<br><img src="https://img-blog.csdnimg.cn/6be943e242d44ddca6174c4553ba64c0.png#pic_center" alt="复制ssh"></p><h2 id="第九步，将生成的ssh添加到github，可以ssh免密登录"><a href="#第九步，将生成的ssh添加到github，可以ssh免密登录" class="headerlink" title="第九步，将生成的ssh添加到github，可以ssh免密登录"></a>第九步，将生成的ssh添加到github，可以ssh免密登录</h2><p>进入github，点击头像，找到右边的settings，进去找到左边SSH and GPG keys，然后new一个SSH key：<br><img src="https://img-blog.csdnimg.cn/84039611426c4170b9308420606373b2.png#pic_center" alt="new一个key"><br>将上一步复制到 id_rsa.pub 里的密钥粘贴到这里<br><img src="https://img-blog.csdnimg.cn/50f0b56b08c64bf19bdf9284aca413fe.png#pic_center" alt="粘贴ssh key"></p><h2 id="第九步，打开开始创建的文件夹，打开里面的-config-yml文件，修改最下面的repo为自己的地址"><a href="#第九步，打开开始创建的文件夹，打开里面的-config-yml文件，修改最下面的repo为自己的地址" class="headerlink" title="第九步，打开开始创建的文件夹，打开里面的_config.yml文件，修改最下面的repo为自己的地址"></a>第九步，打开开始创建的文件夹，打开里面的_config.yml文件，修改最下面的repo为自己的地址</h2><p>deploy:<br>type: git<br>repo: <a href="mailto:git@github.com">git@github.com</a>:username/username.github.io.git<br>branch: main<br><strong>注意：冒号后面是有一个空格的，少了会导致下一步出错！</strong><br><img src="https://img-blog.csdnimg.cn/0f74044c05b74f45879a150eac319652.png#pic_center" alt="修改配置"></p><h2 id="第十步，打开gitbush，安装deploy-git目的为了使用命令部署到github"><a href="#第十步，打开gitbush，安装deploy-git目的为了使用命令部署到github" class="headerlink" title="第十步，打开gitbush，安装deploy-git目的为了使用命令部署到github"></a>第十步，打开gitbush，安装deploy-git目的为了使用命令部署到github</h2><p>在命令行运行如下命令：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-deployer-git <span class="token parameter variable">--save</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://img-blog.csdnimg.cn/f7a0133fd033491b905356a8ae841297.png#pic_center" alt="安装插件"><br>然后依次输入以下命令：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo c   <span class="token comment">#清除缓存文件 db.json 和已生成的静态文件 public</span>hexo g       <span class="token comment">#生成网站静态文件到默认设置的 public 文件夹(hexo generate 的缩写)</span>hexo d       <span class="token comment">#自动生成网站静态文件，并部署到设定的仓库(hexo deploy 的缩写)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>最后一个命令会让输入yes，然后刷新github，发现以下文件上传成功，就OK了<br><img src="https://img-blog.csdnimg.cn/67a80041b293422d930b15e2fc9298e2.png#pic_center" alt="刷新github"><br>至此，以后你就可以使用XXX.github.io来访问你的个人博客了，还可以给自己的个人博客修改nice的主题。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2023/08/19/hello-world/"/>
      <url>/2023/08/19/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
