<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Hexo——如何写markdown文档并使用hexo发布博客</title>
      <link href="/2023/08/24/hexo-ru-he-xie-markdown-wen-dang-bing-shi-yong-hexo-fa-bu-bo-ke/"/>
      <url>/2023/08/24/hexo-ru-he-xie-markdown-wen-dang-bing-shi-yong-hexo-fa-bu-bo-ke/</url>
      
        <content type="html"><![CDATA[<p>@<a href="%E5%A6%82%E4%BD%95%E5%86%99markdown%E6%96%87%E6%A1%A3%E5%B9%B6%E4%BD%BF%E7%94%A8hexo%E5%8F%91%E5%B8%83%E5%8D%9A%E5%AE%A2">TOC</a></p><hr><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>有些小伙伴好不容易博客搭建好了，但是不知道怎么写博客，不知道写一些什么，也不知道怎么发布，最后逃脱不了放在那里吃灰的命运。大佬们写博客是用来分享技术，分享经验的，我们不是大佬，但是我们也可以拿来当笔记使用嘛，记录一些有趣的事情，分享一些旅游札记，哪怕当个日记簿用呢@ <a href="https://liyixuan33.github.io/">liyixuan</a></p><hr><h2 id="一、怎么写博客？"><a href="#一、怎么写博客？" class="headerlink" title="一、怎么写博客？"></a>一、怎么写博客？</h2><p>首先我们要知道自己的博客文件的存放目录是在博客根目录~/source/_posts的里面存放着的。</p><h2 id="二、写博客的步骤"><a href="#二、写博客的步骤" class="headerlink" title="二、写博客的步骤"></a>二、写博客的步骤</h2><h3 id="1-新建一个博客-hexo-new-“博客主题名”"><a href="#1-新建一个博客-hexo-new-“博客主题名”" class="headerlink" title="1.新建一个博客 hexo new “博客主题名”"></a>1.新建一个博客 hexo new “博客主题名”</h3><p>在博客根目录下，右键打开git bush，运行 hexo new “博客主题名” 命令，它会自动生成一个 .md 文件和一个同名文件夹，文件夹里面可以用来存放同名 .md文档里用到的图片。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo new “博客主题名”<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><img src="/2023/08/24/hexo-ru-he-xie-markdown-wen-dang-bing-shi-yong-hexo-fa-bu-bo-ke/1.png" class=""><img src="/2023/08/24/hexo-ru-he-xie-markdown-wen-dang-bing-shi-yong-hexo-fa-bu-bo-ke/2.png" class=""><p>如果想要同时自动生成同名文件夹，需要在根目录下的 _config.yml 打开这个配置</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">post_asset_folder</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="2-在markdown、VS-Code、记事本等编辑器里打开-md-文件并编辑"><a href="#2-在markdown、VS-Code、记事本等编辑器里打开-md-文件并编辑" class="headerlink" title="2.在markdown、VS Code、记事本等编辑器里打开 .md 文件并编辑"></a>2.在markdown、VS Code、记事本等编辑器里打开 .md 文件并编辑</h3><p>常用的 md 语法如下（示例）：</p><pre><code>标题：# 一级标题## 二级标题### 三级标题#### 四级标题##### 五级标题###### 六级标题文本样式：*强调文本* _强调文本_**加粗文本** __加粗文本__==标记文本==~~删除文本~~&gt; 引用文本H~2~O is是液体。2^10^ 运算结果是 1024。列表：- 项目* 项目+ 项目1. 项目12. 项目23. 项目3- [ ] 计划任务- [x] 完成任务图片：图片: ![Alt](https://img-home.csdnimg.cn/images/20220524100510.png)带尺寸的图片: ![Alt](https://img-home.csdnimg.cn/images/20220524100510.png =60x60)宽度确定高度等比例的图片: ![Alt](https://img-home.csdnimg.cn/images/20220524100510.png =60x)高度确定宽度等比例的图片: ![Alt](https://img-home.csdnimg.cn/images/20220524100510.png =x60)居中的图片: ![Alt](https://img-home.csdnimg.cn/images/20220524100510.png#pic_center)居中并且带尺寸的图片: ![Alt](https://img-home.csdnimg.cn/images/20220524100510.png#pic_center =60x60)居右的图片: ![Alt](https://img-home.csdnimg.cn/images/20220524100510.png#pic_right)链接：链接: [link](https://www.csdn.net/)目录：@[TOC](这里写目录标题)# 一级目录## 二级目录### 三级目录代码片：下面展示一些 `内联代码片`。<pre class="line-numbers language-none"><code class="language-none">// A code blockvar foo = 'bar';<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// An highlighted block</span><span class="token keyword">var</span> foo <span class="token operator">=</span> <span class="token string">'bar'</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>表格：项目     | Value-------- | -----电脑  | $1600手机  | $12导管  | $1| Column 1 | Column 2      ||:--------:| -------------:|| centered 文本居中 | right-aligned 文本居右 |</code></pre><h3 id="3-编辑-markdown-文档的快速入门方法，新手推荐！"><a href="#3-编辑-markdown-文档的快速入门方法，新手推荐！" class="headerlink" title="3.编辑 markdown 文档的快速入门方法，新手推荐！"></a>3.编辑 markdown 文档的快速入门方法，新手推荐！</h3><p>   打开csdn网站，在创作中新的首页，有一个 markdown 编辑器，使用起来对新手非常友好<br>   <img src="/2023/08/24/hexo-ru-he-xie-markdown-wen-dang-bing-shi-yong-hexo-fa-bu-bo-ke/3.png" class=""><br>不仅有语法介绍，还有很多的新手模板可以选择</p><img src="/2023/08/24/hexo-ru-he-xie-markdown-wen-dang-bing-shi-yong-hexo-fa-bu-bo-ke/4.png" class=""><p>还可以在左边编辑同时在右边预览，对着模板改，比葫芦画瓢，编写完成后可以导出为md文件</p><img src="/2023/08/24/hexo-ru-he-xie-markdown-wen-dang-bing-shi-yong-hexo-fa-bu-bo-ke/5.png" class=""><h3 id="4-将上一步导出的md文件中的内容移植到第一部创建的md文件中。"><a href="#4-将上一步导出的md文件中的内容移植到第一部创建的md文件中。" class="headerlink" title="4.将上一步导出的md文件中的内容移植到第一部创建的md文件中。"></a>4.将上一步导出的md文件中的内容移植到第一部创建的md文件中。</h3><p> 这一步只需要把导出的md打开，复制粘贴到你自己创建的md文档中，这里呢，并不是粘贴完成之后就万事大吉了，如下图所示，是导出 md 文档中的插入图片语法格式，标准的markdown语法：</p><img src="/2023/08/24/hexo-ru-he-xie-markdown-wen-dang-bing-shi-yong-hexo-fa-bu-bo-ke/6.png" class=""><p>然而，实际的运行效果却是：</p><img src="/2023/08/24/hexo-ru-he-xie-markdown-wen-dang-bing-shi-yong-hexo-fa-bu-bo-ke/7.png" class=""><h3 id="5-解决插入图片的问题，md-语法插入的图片可能会在-hexo中无法显示"><a href="#5-解决插入图片的问题，md-语法插入的图片可能会在-hexo中无法显示" class="headerlink" title="5.解决插入图片的问题，md 语法插入的图片可能会在 hexo中无法显示"></a>5.解决插入图片的问题，md 语法插入的图片可能会在 hexo中无法显示</h3><p>此时有一种解决办法，使用hexo支持的插入图片语法格式，插入图片语法如下：</p> <p><strong>注意：</strong>中间都有空格分开！要插入的图片都要放在 .md文件的同名文件夹里！</p><img src="/2023/08/24/hexo-ru-he-xie-markdown-wen-dang-bing-shi-yong-hexo-fa-bu-bo-ke/8.png" class=""><img src="/2023/08/24/hexo-ru-he-xie-markdown-wen-dang-bing-shi-yong-hexo-fa-bu-bo-ke/9.png" class=""><h3 id="6-发布编辑好的博客"><a href="#6-发布编辑好的博客" class="headerlink" title="6.发布编辑好的博客"></a>6.发布编辑好的博客</h3><p>打开 cmd 命令行工具，通过依次输入以下命令进行发布：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo chexo g <span class="token parameter variable">-d</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>至此，编写的博客就发布成功了！</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>以上就是今天要分享的内容，本文主要介绍了如何写markdown文档并使用hexo发布博客的一些相关问题，仅为参考建议，不代表绝对规范。</p>]]></content>
      
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>“博客主题名”</title>
      <link href="/2023/08/23/bo-ke-zhu-ti-ming/"/>
      <url>/2023/08/23/bo-ke-zhu-ti-ming/</url>
      
        <content type="html"><![CDATA[<h2 id="这也是一个测试页面！"><a href="#这也是一个测试页面！" class="headerlink" title="这也是一个测试页面！"></a>这也是一个测试页面！</h2><h2 id="这也是一个测试页面！-1"><a href="#这也是一个测试页面！-1" class="headerlink" title="这也是一个测试页面！"></a>这也是一个测试页面！</h2><h2 id="这也是一个测试页面！-2"><a href="#这也是一个测试页面！-2" class="headerlink" title="这也是一个测试页面！"></a>这也是一个测试页面！</h2><h3 id="图片如下："><a href="#图片如下：" class="headerlink" title="图片如下："></a>图片如下：</h3><p><img src="https://img-blog.csdnimg.cn/235321a3a3fa46c3bd0fe3c3e28f34f0.png#pic_center" alt="Hexo与Node.js的版本对应"></p>]]></content>
      
      
      
        <tags>
            
            <tag> test </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo——解决使用Hexo搭建个人博客遇到的一些问题</title>
      <link href="/2023/08/23/hexo-jie-jue-shi-yong-hexo-da-jian-ge-ren-bo-ke-yu-dao-de-yi-xie-wen-ti/"/>
      <url>/2023/08/23/hexo-jie-jue-shi-yong-hexo-da-jian-ge-ren-bo-ke-yu-dao-de-yi-xie-wen-ti/</url>
      
        <content type="html"><![CDATA[<hr><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>前几天在使用Hexo和GitHub创建个人博客的时候遇到了一些问题，也可以说是坑吧，主要遇到的有两个，一个是刚开始初始化的时候，一个是最后一步部署到GitHub的时候。没错，就很离谱，一个是劝退你，一个是先给你希望，最后再让你绝望。我也是试了很久，才找到以下几种解决办法。</p><hr><h1 id="一、初始化阶段连接不到GitHub，一直克隆失败"><a href="#一、初始化阶段连接不到GitHub，一直克隆失败" class="headerlink" title="一、初始化阶段连接不到GitHub，一直克隆失败"></a>一、初始化阶段连接不到GitHub，一直克隆失败</h1><h2 id="1-在初始化阶段踩的坑，大多数人第一步都完成不了就很容易让人直接劝退。。。"><a href="#1-在初始化阶段踩的坑，大多数人第一步都完成不了就很容易让人直接劝退。。。" class="headerlink" title="1.在初始化阶段踩的坑，大多数人第一步都完成不了就很容易让人直接劝退。。。"></a>1.在初始化阶段踩的坑，大多数人第一步都完成不了就很容易让人直接劝退。。。</h2><p>在使用 hexo init 的时候出现下面这样的情况，简直让人不能忍受！！报错代码如下：<br>fatal: unable to access ‘<a href="https://github.com/hexojs/hexo-starter.git/">https://github.com/hexojs/hexo-starter.git/</a>‘: Recv failure: Connection was reset<br>WARN  git clone failed. Copying data instead<br>FATAL Something’s wrong. Maybe you can find the solution here: <a href="http://hexo.io/docs/troubleshooting.html">http://hexo.io/docs/troubleshooting.html</a><br>Error: EPERM: operation not permitted, mkdir ‘D:’</p><img src="/2023/08/23/hexo-jie-jue-shi-yong-hexo-da-jian-ge-ren-bo-ke-yu-dao-de-yi-xie-wen-ti/1.png" class="" title="报错图片"><h2 id="2-这样的情况我遇到有两种原因："><a href="#2-这样的情况我遇到有两种原因：" class="headerlink" title="2.这样的情况我遇到有两种原因："></a>2.这样的情况我遇到有两种原因：</h2><h3 id="2-1既没有配置npm淘宝镜像又没有打开“科学上网“工具，这样的情况下，二者完成其一一般都能解决。"><a href="#2-1既没有配置npm淘宝镜像又没有打开“科学上网“工具，这样的情况下，二者完成其一一般都能解决。" class="headerlink" title="2.1既没有配置npm淘宝镜像又没有打开“科学上网“工具，这样的情况下，二者完成其一一般都能解决。"></a>2.1既没有配置npm淘宝镜像又没有打开“科学上网“工具，这样的情况下，二者完成其一一般都能解决。</h3><p> （1）配置 npm 淘宝镜像<br> 淘宝镜像是指淘宝提供的一个软件源，可以用于下载和安装各种软件包。为什么需要安装淘宝镜像呢？因为在国内，访问国外的软件源速度很慢，而淘宝镜像是国内的，下载速度快，可以提高软件安装的效率。打开 cmd 运行如下命令：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> config <span class="token builtin class-name">set</span> registry https://registry.npm.taobao.org <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p> 安装配置完成后，继续运行 hexo init 就能解决了。<br> （2）打开“科学上网”工具，直接运行 hexo init 就行了。</p><h3 id="2-2打开了“科学上网”工具，运行-hexo-init-还是一直报上面的错误！"><a href="#2-2打开了“科学上网”工具，运行-hexo-init-还是一直报上面的错误！" class="headerlink" title="2.2打开了“科学上网”工具，运行 hexo init 还是一直报上面的错误！"></a>2.2打开了“科学上网”工具，运行 hexo init 还是一直报上面的错误！</h3><p>这种情况下可能是科学上网工具不稳定导致的网络连接不稳定，这里建议关掉并退出工具，再次执行 hexo init 初始化命令，如果还是不行，这里推荐一种不用“科学上网”，不连接到GitHub也能初始化的操作：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ npx hexo init 【myblog】<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在 git bush 运行以上命令，简直是不愿意使用科学上网工具的小伙伴的福音！它会直接在当前空文件下创建一个 myblog 的文件并进行初始化。</p><img src="/2023/08/23/hexo-jie-jue-shi-yong-hexo-da-jian-ge-ren-bo-ke-yu-dao-de-yi-xie-wen-ti/2.png" class="" title="创建成功图片"><h1 id="二、在最后一步将自己创建好的博客上传部署到github上，又出现报错！！！"><a href="#二、在最后一步将自己创建好的博客上传部署到github上，又出现报错！！！" class="headerlink" title="二、在最后一步将自己创建好的博客上传部署到github上，又出现报错！！！"></a>二、在最后一步将自己创建好的博客上传部署到github上，又出现报错！！！</h1><h2 id="1-问题描述如下"><a href="#1-问题描述如下" class="headerlink" title="1.问题描述如下"></a>1.问题描述如下</h2><p>ssh: connect to host github.com port 22: Connection timed out<br>fatal: Could not read from remote repository.<br>Please make sure you have the correct access rights<br>and the repository exists.<br>FATAL Something’s wrong. Maybe you can find the solution here: <a href="https://hexo.io/docs/troubleshooting.html">https://hexo.io/docs/troubleshooting.html</a><br>Error: Spawn failed<br>at ChildProcess.<anonymous> (D:\Myblog\myblog\node_modules\hexo-util\lib\spawn.js:51:21)<br>at ChildProcess.emit (events.js:314:20)<br>at ChildProcess.cp.emit (D:\Myblog\myblog\node_modules\cross-spawn\lib\enoent.js:34:29)<br>at Process.ChildProcess._handle.onexit (internal/child_process.js:276:12)</anonymous></p><img src="/2023/08/23/hexo-jie-jue-shi-yong-hexo-da-jian-ge-ren-bo-ke-yu-dao-de-yi-xie-wen-ti/3.png" class="" title="报错图片"><p>一般这种情况大多是网络原因导致的，科学上网工具不稳定，DNS解析被污染等因素。我们可以详细看看建立 ssh 连接的过程中发生了什么，可以使用 ssh -v命令，-v表示 verbose，会打出详细日志。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">ssh</span> <span class="token parameter variable">-vT</span> git@github.com<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><img src="/2023/08/23/hexo-jie-jue-shi-yong-hexo-da-jian-ge-ren-bo-ke-yu-dao-de-yi-xie-wen-ti/4.png" class="" title="日志图片"><p>从上图可以看出，虽然访问的IP地址目测也没什么毛病，但是不管重复几次它还是连接超时导致无法部署，然后它显示SSH也连接失败，说明这个 22 端口目前是有问题的。</p><h2 id="2-解决办法"><a href="#2-解决办法" class="headerlink" title="2.解决办法"></a>2.解决办法</h2><h3 id="2-1在-C-Users-Administrator-ssh-中找到-ssh文件夹（此前配置SSH时会生成该文件夹）"><a href="#2-1在-C-Users-Administrator-ssh-中找到-ssh文件夹（此前配置SSH时会生成该文件夹）" class="headerlink" title="2.1在 C:\Users\Administrator.ssh 中找到.ssh文件夹（此前配置SSH时会生成该文件夹）"></a>2.1在 C:\Users\Administrator.ssh 中找到.ssh文件夹（此前配置SSH时会生成该文件夹）</h3><p>在 .ssh 文件夹中新建文本文件 config ,不带后缀（可以新建文本文档，去掉 .txt 后缀）<br>打开 config 文件，输入以下内容，保存后即可，其中<a href="mailto:xxx@qq.com">xxx@qq.com</a> 为你自己的邮箱</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml">Host github.comUser xxx@qq.comHostname ssh.github.comPreferredAuthentications publickeyIdentityFile ~/.ssh/id_rsaPort 443<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-2修改hosts文件"><a href="#2-2修改hosts文件" class="headerlink" title="2.2修改hosts文件"></a>2.2修改hosts文件</h3><p>操作系统中 hosts 文件的权限优先级高于DNS服务器，在 C:\Windows\System32\drivers\etc 目录下找到并修改 hosts 文件，增加一条 github.com 的域名映射可以解决。</p><img src="/2023/08/23/hexo-jie-jue-shi-yong-hexo-da-jian-ge-ren-bo-ke-yu-dao-de-yi-xie-wen-ti/5.png" class="" title="修改hosts图片"><p>再次运行<code>$ ssh -vT git@github.com</code>检查，发现连接成功了！</p><img src="/2023/08/23/hexo-jie-jue-shi-yong-hexo-da-jian-ge-ren-bo-ke-yu-dao-de-yi-xie-wen-ti/6.png" class="" title="成功图片"><p>这里输入yes，就连接成功了！</p><img src="/2023/08/23/hexo-jie-jue-shi-yong-hexo-da-jian-ge-ren-bo-ke-yu-dao-de-yi-xie-wen-ti/7.png" class="" title="连接成功图片"><p>最后，输入 hexo d 就能够上传部署成功了！</p><hr><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>以上就是所有要说的内容了，只是我个人在搭建过程中遇到的一些问题，仅供参考一下，每个人遇到的问题可能都是不一样的，具体问题具体分析，多查查，多看看，一般都能解决的。</p>]]></content>
      
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo——通过Hexo搭建个人博客</title>
      <link href="/2023/08/21/hexo-tong-guo-hexo-da-jian-ge-ren-bo-ke/"/>
      <url>/2023/08/21/hexo-tong-guo-hexo-da-jian-ge-ren-bo-ke/</url>
      
        <content type="html"><![CDATA[<h1 id="通过Hexo搭建个人博客"><a href="#通过Hexo搭建个人博客" class="headerlink" title="通过Hexo搭建个人博客"></a>通过Hexo搭建个人博客</h1><p>Hexo是一个基于Node.js的静态博客生成框架，它允许你用Markdown语法编写博客文章，并将其转换为HTML页面。通过Hexo，你可以方便地创建和管理个人博客，然后将生成的静态页面部署到网络服务器上。这使得博客的管理和发布变得更加简单和高效。<br>首先电脑要安装配置有git环境和node环境，还要有自己的GitHub账号。以下是Hexo与Node.js的版本对应关系：</p><img src="/2023/08/21/hexo-tong-guo-hexo-da-jian-ge-ren-bo-ke/1.png" class="" title="Hexo与Node.js的版本对应"><p>接下来我们只需十步完成搭建！</p><h2 id="第一步，打开cmd命令行全局安装Hexo-cli脚手架"><a href="#第一步，打开cmd命令行全局安装Hexo-cli脚手架" class="headerlink" title="第一步，打开cmd命令行全局安装Hexo-cli脚手架"></a>第一步，打开cmd命令行全局安装Hexo-cli脚手架</h2><p>使用 win+R 输入cmd 进入命令行界面，输入以下命令：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">-g</span> hexo-cli<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><img src="/2023/08/21/hexo-tong-guo-hexo-da-jian-ge-ren-bo-ke/2.png" class="" title="运行结果"><h2 id="第二步，在你喜欢的磁盘目录下创建一个空文件夹"><a href="#第二步，在你喜欢的磁盘目录下创建一个空文件夹" class="headerlink" title="第二步，在你喜欢的磁盘目录下创建一个空文件夹"></a>第二步，在你喜欢的磁盘目录下创建一个空文件夹</h2><p>我这里创建了一个winksu的空文件夹，进行第三步之前，一定要确保它是空的。</p><img src="/2023/08/21/hexo-tong-guo-hexo-da-jian-ge-ren-bo-ke/3.png" class="" title="仅供参考"><h2 id="第三步，在上一步的文件夹下右键打开gitbush命令行界面，进行初始化"><a href="#第三步，在上一步的文件夹下右键打开gitbush命令行界面，进行初始化" class="headerlink" title="第三步，在上一步的文件夹下右键打开gitbush命令行界面，进行初始化"></a>第三步，在上一步的文件夹下右键打开gitbush命令行界面，进行初始化</h2><p>如果右键没有装载gitbush，可以在当前目录通过 shift+右键，打开终端，同样如下进行初始化：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo init<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><img src="/2023/08/21/hexo-tong-guo-hexo-da-jian-ge-ren-bo-ke/4.png" class="" title="初始化成功"><h2 id="第四步，启动查看Hexo网站是否初始化成功"><a href="#第四步，启动查看Hexo网站是否初始化成功" class="headerlink" title="第四步，启动查看Hexo网站是否初始化成功"></a>第四步，启动查看Hexo网站是否初始化成功</h2><p>输入以下命令启动：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo s<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><img src="/2023/08/21/hexo-tong-guo-hexo-da-jian-ge-ren-bo-ke/5.png" class="" title="运行结果"><p>在浏览器上输入给定的端口号<a href="http://localhost:4000/%E8%BF%9B%E8%A1%8C%E8%AE%BF%E9%97%AE%E8%83%BD%E7%9C%8B%E5%88%B0%E5%A6%82%E4%B8%8B%E7%95%8C%E9%9D%A2%EF%BC%8C%E5%B0%B1%E6%98%AF%E5%88%9D%E5%A7%8B%E5%8C%96%E6%88%90%E5%8A%9F%E3%80%82">http://localhost:4000/进行访问能看到如下界面，就是初始化成功。</a></p><img src="/2023/08/21/hexo-tong-guo-hexo-da-jian-ge-ren-bo-ke/6.png" class="" title="初始化成功"><h2 id="第五步，进入自己的github，创建一个新的仓库，仓库名要与用户名同名，后缀-github-io"><a href="#第五步，进入自己的github，创建一个新的仓库，仓库名要与用户名同名，后缀-github-io" class="headerlink" title="第五步，进入自己的github，创建一个新的仓库，仓库名要与用户名同名，后缀~github.io"></a>第五步，进入自己的github，创建一个新的仓库，仓库名要与用户名同名，后缀~github.io</h2><img src="/2023/08/21/hexo-tong-guo-hexo-da-jian-ge-ren-bo-ke/7.png" class="" title="new一个仓库"><img src="/2023/08/21/hexo-tong-guo-hexo-da-jian-ge-ren-bo-ke/8.png" class="" title="创建仓库"><h2 id="第六步，打开cmd，验证自己的git账户，目的为了后续生成ssh密钥"><a href="#第六步，打开cmd，验证自己的git账户，目的为了后续生成ssh密钥" class="headerlink" title="第六步，打开cmd，验证自己的git账户，目的为了后续生成ssh密钥"></a>第六步，打开cmd，验证自己的git账户，目的为了后续生成ssh密钥</h2><p>依次输入命令如下：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> config <span class="token parameter variable">--global</span> user.name <span class="token string">"git用户名"</span><span class="token function">git</span> config <span class="token parameter variable">--global</span> user.email <span class="token string">"git邮箱"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><img src="/2023/08/21/hexo-tong-guo-hexo-da-jian-ge-ren-bo-ke/9.png" class="" title="验证账号"><h2 id="第七步，打开gitbush窗口，输入以下命令，获取ssh"><a href="#第七步，打开gitbush窗口，输入以下命令，获取ssh" class="headerlink" title="第七步，打开gitbush窗口，输入以下命令，获取ssh"></a>第七步，打开gitbush窗口，输入以下命令，获取ssh</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">ssh-keygen <span class="token parameter variable">-t</span> rsa <span class="token parameter variable">-C</span> git邮箱<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><img src="/2023/08/21/hexo-tong-guo-hexo-da-jian-ge-ren-bo-ke/10.png" class="" title="获取ssh"><h2 id="第八步，打开c盘找到如图所示目录下的-ssh的文件，打开-id-rsa-pub-复制里面的全部内容"><a href="#第八步，打开c盘找到如图所示目录下的-ssh的文件，打开-id-rsa-pub-复制里面的全部内容" class="headerlink" title="第八步，打开c盘找到如图所示目录下的 .ssh的文件，打开 id_rsa.pub,复制里面的全部内容"></a>第八步，打开c盘找到如图所示目录下的 .ssh的文件，打开 id_rsa.pub,复制里面的全部内容</h2><img src="/2023/08/21/hexo-tong-guo-hexo-da-jian-ge-ren-bo-ke/11.png" class="" title="找到ssh"><p>打开 .ssh文件，找到id_rsa.pub，复制里面的全部内容</p><img src="/2023/08/21/hexo-tong-guo-hexo-da-jian-ge-ren-bo-ke/12.png" class="" title="复制ssh"><h2 id="第九步，将生成的ssh添加到github，可以ssh免密登录"><a href="#第九步，将生成的ssh添加到github，可以ssh免密登录" class="headerlink" title="第九步，将生成的ssh添加到github，可以ssh免密登录"></a>第九步，将生成的ssh添加到github，可以ssh免密登录</h2><p>进入github，点击头像，找到右边的settings，进去找到左边SSH and GPG keys，然后new一个SSH key：</p><img src="/2023/08/21/hexo-tong-guo-hexo-da-jian-ge-ren-bo-ke/13.png" class="" title="new一个key"><p>将上一步复制到 id_rsa.pub 里的密钥粘贴到这里</p><img src="/2023/08/21/hexo-tong-guo-hexo-da-jian-ge-ren-bo-ke/14.png" class="" title="粘贴ssh key"><h2 id="第九步，打开开始创建的文件夹，打开里面的-config-yml文件，修改最下面的repo为自己的地址"><a href="#第九步，打开开始创建的文件夹，打开里面的-config-yml文件，修改最下面的repo为自己的地址" class="headerlink" title="第九步，打开开始创建的文件夹，打开里面的_config.yml文件，修改最下面的repo为自己的地址"></a>第九步，打开开始创建的文件夹，打开里面的_config.yml文件，修改最下面的repo为自己的地址</h2><p>deploy:<br>type: git<br>repo: <a href="mailto:git@github.com">git@github.com</a>:username/username.github.io.git<br>branch: main<br><strong>注意：冒号后面是有一个空格的，少了会导致下一步出错！</strong></p><img src="/2023/08/21/hexo-tong-guo-hexo-da-jian-ge-ren-bo-ke/15.png" class="" title="修改配置"><h2 id="第十步，打开gitbush，安装deploy-git目的为了使用命令部署到github"><a href="#第十步，打开gitbush，安装deploy-git目的为了使用命令部署到github" class="headerlink" title="第十步，打开gitbush，安装deploy-git目的为了使用命令部署到github"></a>第十步，打开gitbush，安装deploy-git目的为了使用命令部署到github</h2><p>在命令行运行如下命令：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-deployer-git <span class="token parameter variable">--save</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><img src="/2023/08/21/hexo-tong-guo-hexo-da-jian-ge-ren-bo-ke/16.png" class="" title="安装插件"><p>然后依次输入以下命令：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo c   <span class="token comment">#清除缓存文件 db.json 和已生成的静态文件 public</span>hexo g       <span class="token comment">#生成网站静态文件到默认设置的 public 文件夹(hexo generate 的缩写)</span>hexo d       <span class="token comment">#自动生成网站静态文件，并部署到设定的仓库(hexo deploy 的缩写)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>最后一个命令会让输入yes，然后刷新github，发现以下文件上传成功，就OK了</p><img src="/2023/08/21/hexo-tong-guo-hexo-da-jian-ge-ren-bo-ke/17.png" class="" title="刷新github"><p>至此，以后你就可以使用XXX.github.io来访问你的个人博客了，还可以给自己的个人博客修改nice的主题。</p>]]></content>
      
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>test</title>
      <link href="/2023/08/21/test/"/>
      <url>/2023/08/21/test/</url>
      
        <content type="html"><![CDATA[<h1 id="你好，这是一个测试页面！"><a href="#你好，这是一个测试页面！" class="headerlink" title="你好，这是一个测试页面！"></a>你好，这是一个测试页面！</h1><h1 id="你好，这是一个测试页面！-1"><a href="#你好，这是一个测试页面！-1" class="headerlink" title="你好，这是一个测试页面！"></a>你好，这是一个测试页面！</h1><h1 id="你好，这是一个测试页面！-2"><a href="#你好，这是一个测试页面！-2" class="headerlink" title="你好，这是一个测试页面！"></a>你好，这是一个测试页面！</h1><h1 id="你好，这是一个测试页面！-3"><a href="#你好，这是一个测试页面！-3" class="headerlink" title="你好，这是一个测试页面！"></a>你好，这是一个测试页面！</h1><h1 id="你好，这是一个测试页面！-4"><a href="#你好，这是一个测试页面！-4" class="headerlink" title="你好，这是一个测试页面！"></a>你好，这是一个测试页面！</h1><h1 id="你好，这是一个测试页面！-5"><a href="#你好，这是一个测试页面！-5" class="headerlink" title="你好，这是一个测试页面！"></a>你好，这是一个测试页面！</h1><img src="/2023/08/21/test/1.jpg" class="" title="this is test">]]></content>
      
      
      
        <tags>
            
            <tag> test </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2023/08/19/hello-world/"/>
      <url>/2023/08/19/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
